# =============================================================================
# JTS SECURITY POLICY CONFIGURATION
# =============================================================================
# Purpose: Define security thresholds, patterns, and notification settings
# Scope: Used by security workflows to determine pass/fail criteria
# Last Updated: 2025-09-06
# Review Cycle: Quarterly
# =============================================================================

# =============================================================================
# VULNERABILITY THRESHOLDS
# =============================================================================
# WHY: Define acceptable vulnerability counts by severity
# HOW: Workflows fail if thresholds are exceeded
# WHAT: Forces teams to address security issues promptly
# =============================================================================

vulnerability_thresholds:
  # CRITICAL: Immediate action required, blocks all deployments
  critical:
    max_allowed: 0 # Zero tolerance for critical vulnerabilities
    block_pr: true # Block PR merge
    block_deployment: true # Block all deployments
    notification: immediate # Notify immediately
    escalation_time: 1h # Escalate if not addressed within 1 hour

  # HIGH: Urgent action required, blocks production deployments
  high:
    max_allowed: 2 # Maximum 2 high severity issues
    block_pr: true # Block PR merge
    block_deployment: true # Block production deployments only
    notification: immediate # Notify immediately
    escalation_time: 4h # Escalate if not addressed within 4 hours

  # MEDIUM: Action required, warning only
  medium:
    max_allowed: 10 # Maximum 10 medium severity issues
    block_pr: false # Don't block PR
    block_deployment: false # Don't block deployments
    notification: daily # Daily summary
    escalation_time: 7d # Escalate if not addressed within 7 days

  # LOW: Tracking only
  low:
    max_allowed: 50 # Maximum 50 low severity issues
    block_pr: false # Don't block PR
    block_deployment: false # Don't block deployments
    notification: weekly # Weekly summary
    escalation_time: 30d # Escalate if not addressed within 30 days

# =============================================================================
# SECRET DETECTION PATTERNS
# =============================================================================
# WHY: Define patterns for detecting various types of secrets
# HOW: Custom regex patterns for trading system specific secrets
# WHAT: Prevents credential leaks in source code
# =============================================================================

secret_patterns:
  # API Keys and Tokens
  - name: 'generic_api_key'
    pattern: '(?i)(api[_-]?key|apikey|api_token|apitoken)\s*[:=]\s*["\x27]?([a-zA-Z0-9_\-]{20,})["\x27]?'
    severity: 'critical'

  - name: 'jwt_token'
    pattern: 'eyJ[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*'
    severity: 'critical'

  # Database Credentials
  - name: 'database_connection_string'
    pattern: '(?i)(mongodb|postgres|postgresql|mysql|redis|clickhouse):\/\/[^:]+:[^@]+@[^\s]+'
    severity: 'critical'

  - name: 'database_password'
    pattern: '(?i)(db_pass|database_pass|db_password|database_password)\s*[:=]\s*["\x27]?([^\s"\x27]+)["\x27]?'
    severity: 'critical'

  # Trading Platform Credentials
  - name: 'broker_api_key'
    pattern: '(?i)(binance|kraken|coinbase|creon|kis)[-_]?(api[-_]?key|secret)\s*[:=]\s*["\x27]?([a-zA-Z0-9_\-]{20,})["\x27]?'
    severity: 'critical'

  - name: 'trading_secret'
    pattern: '(?i)(trading|exchange|broker)[-_]?secret\s*[:=]\s*["\x27]?([a-zA-Z0-9_\-]{20,})["\x27]?'
    severity: 'critical'

  # Cloud Provider Secrets
  - name: 'aws_credentials'
    pattern: '(?i)(aws_access_key_id|aws_secret_access_key|aws_session_token)\s*[:=]\s*["\x27]?([A-Za-z0-9/+=]{20,})["\x27]?'
    severity: 'critical'

  - name: 'gcp_credentials'
    pattern: '(?i)("type":\s*"service_account"|private_key_id|private_key|client_email)'
    severity: 'critical'

  # Blockchain/Crypto
  - name: 'private_key'
    pattern: '(?i)(private[-_]?key|priv[-_]?key|secret[-_]?key)\s*[:=]\s*["\x27]?(0x)?[a-fA-F0-9]{64}["\x27]?'
    severity: 'critical'

  - name: 'mnemonic_phrase'
    pattern: '(?i)(mnemonic|seed[-_]?phrase|recovery[-_]?phrase)\s*[:=]\s*["\x27]([a-z]+ ){11,23}[a-z]+["\x27]'
    severity: 'critical'

# =============================================================================
# LICENSE COMPLIANCE
# =============================================================================
# WHY: Ensure all dependencies have compatible licenses
# HOW: Define allowed and prohibited licenses
# WHAT: Prevents legal issues from incompatible licenses
# =============================================================================

license_compliance:
  # Allowed licenses (compatible with proprietary trading system)
  allowed_licenses:
    - 'MIT'
    - 'Apache-2.0'
    - 'Apache-2.0 WITH LLVM-exception'
    - 'BSD-2-Clause'
    - 'BSD-3-Clause'
    - 'BSD-3-Clause-Clear'
    - 'ISC'
    - '0BSD'
    - 'Unlicense'
    - 'CC0-1.0'
    - 'CC-BY-4.0'
    - 'Python-2.0'
    - 'PostgreSQL'
    - 'Zlib'
    - 'WTFPL'

  # Explicitly prohibited licenses
  prohibited_licenses:
    - 'GPL-2.0'
    - 'GPL-3.0'
    - 'AGPL-3.0'
    - 'LGPL-2.1'
    - 'LGPL-3.0'
    - 'MPL-2.0'
    - 'OSL-3.0'
    - 'EUPL-1.2'
    - 'CC-BY-SA-4.0'
    - 'CC-BY-NC-4.0'

  # Licenses requiring legal review
  review_required:
    - 'CDDL-1.0'
    - 'EPL-2.0'
    - 'MS-PL'
    - 'CPOL-1.02'

  # Action when prohibited license found
  on_violation:
    action: 'block' # block|warn|report
    notification: 'immediate' # immediate|daily|weekly
    require_approval: true # Require explicit approval to proceed

# =============================================================================
# COMPLIANCE FRAMEWORKS
# =============================================================================
# WHY: Trading systems must comply with financial regulations
# HOW: Map security controls to compliance requirements
# WHAT: Ensures regulatory compliance
# =============================================================================

compliance_frameworks:
  - name: 'SOC2'
    enabled: true
    controls:
      - 'access-control'
      - 'encryption'
      - 'logging'
      - 'monitoring'

  - name: 'PCI-DSS'
    enabled: true
    controls:
      - 'secure-coding'
      - 'vulnerability-management'
      - 'access-control'
      - 'encryption'

  - name: 'ISO-27001'
    enabled: true
    controls:
      - 'risk-assessment'
      - 'incident-response'
      - 'business-continuity'

  - name: 'GDPR'
    enabled: true
    controls:
      - 'data-protection'
      - 'privacy'
      - 'consent-management'

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================
# WHY: Ensure security issues are communicated promptly
# HOW: Multiple notification channels for different severities
# WHAT: Enables rapid response to security issues
# =============================================================================

notifications:
  # Slack notifications
  slack:
    enabled: true
    webhook_url_secret: 'SLACK_SECURITY_WEBHOOK' # GitHub secret name
    channels:
      critical: '#security-critical'
      high: '#security-alerts'
      medium: '#security-daily'
      low: '#security-weekly'
    mentions:
      critical: '@channel'
      high: '@security-team'
      medium: '@security-team'
      low: ''

  # Discord notifications
  discord:
    enabled: false
    webhook_url_secret: 'DISCORD_SECURITY_WEBHOOK'
    channels:
      all: '#security'

  # Email notifications
  email:
    enabled: true
    recipients:
      critical:
        - security@company.com
        - cto@company.com
        - dev-leads@company.com
      high:
        - security@company.com
        - dev-leads@company.com
      medium:
        - security@company.com
      low:
        - security@company.com

  # GitHub Issues
  github_issues:
    enabled: true
    create_for:
      - 'critical'
      - 'high'
    labels:
      - 'security'
      - 'automated'
      - '${severity}' # Dynamic label based on severity
    assignees:
      - '@security-team'

# =============================================================================
# SECURITY TOOLS CONFIGURATION
# =============================================================================
# WHY: Standardize tool configurations across all workflows
# HOW: Central configuration for security scanning tools
# WHAT: Ensures consistent security scanning
# =============================================================================

security_tools:
  # CodeQL Configuration
  codeql:
    enabled: true
    languages: ['javascript', 'typescript']
    queries: ['security-extended', 'security-and-quality']

  # Trivy Configuration
  trivy:
    enabled: true
    scan_types: ['os', 'library', 'secret', 'config']
    severity: ['CRITICAL', 'HIGH', 'MEDIUM']
    ignore_unfixed: false

  # Snyk Configuration
  snyk:
    enabled: true
    severity_threshold: 'medium'
    fail_on: ['critical', 'high']

  # OWASP Dependency Check
  owasp:
    enabled: true
    fail_build_on_cvss: 7.0 # CVSS score threshold
    suppression_file: '.owasp-suppressions.xml'

  # GitLeaks Configuration
  gitleaks:
    enabled: true
    config_file: '.gitleaks.toml'
    scan_depth: 100 # Number of commits to scan

# =============================================================================
# SECURITY METRICS
# =============================================================================
# WHY: Track security posture over time
# HOW: Define metrics to collect and track
# WHAT: Enables security improvement measurement
# =============================================================================

metrics:
  # Metrics to track
  track:
    - vulnerability_count_by_severity
    - mean_time_to_remediation
    - secret_detection_rate
    - dependency_update_lag
    - security_scan_coverage
    - false_positive_rate

  # Reporting
  reporting:
    frequency: 'weekly' # daily|weekly|monthly
    format: 'json' # json|html|markdown
    storage: 'artifacts' # artifacts|s3|database
    retention_days: 90 # How long to keep reports

# =============================================================================
# EXEMPTIONS AND OVERRIDES
# =============================================================================
# WHY: Sometimes security policies need temporary exceptions
# HOW: Define process for security exemptions
# WHAT: Maintains security while allowing business flexibility
# =============================================================================

exemptions:
  # Approval requirements
  approval_required_from:
    - 'security-team'
    - 'team-lead'
    - 'cto' # For critical exemptions

  # Maximum exemption duration
  max_duration_days: 30

  # Require justification
  require_justification: true
  require_mitigation_plan: true
  require_end_date: true

  # Tracking
  track_in_issues: true
  review_frequency: 'weekly'

# =============================================================================
# SECURITY REVIEW REQUIREMENTS
# =============================================================================
# WHY: Certain changes require additional security review
# HOW: Define triggers for mandatory security review
# WHAT: Ensures high-risk changes get proper scrutiny
# =============================================================================

security_review:
  # File patterns requiring security review
  required_for_files:
    - '**/auth/**'
    - '**/security/**'
    - '**/crypto/**'
    - '**/*encryption*'
    - '**/*password*'
    - '**/*secret*'
    - '**/*token*'
    - '**/Dockerfile*'
    - '**/.github/workflows/**'

  # Dependencies requiring review
  required_for_dependencies:
    - 'crypto'
    - 'bcrypt'
    - 'jsonwebtoken'
    - 'passport'
    - 'oauth'
    - 'saml'

  # Automated review assignment
  auto_assign_reviewers:
    - '@security-team'
    - '@senior-developers'
# =============================================================================
# NOTES
# =============================================================================
# 1. This configuration is loaded by security workflows
# 2. Changes require security team approval
# 3. Review quarterly or after security incidents
# 4. Test changes in development environment first
# 5. Keep synchronized with security documentation
#
# For questions: security@company.com
# Documentation: https://docs.company.com/security
# =============================================================================
