# ═══════════════════════════════════════════════════════════════════
# ███ STAGE 1: Dependencies ███
# ═══════════════════════════════════════════════════════════════════
FROM node:20-alpine AS dependencies

# WHY: Install only production dependencies for smaller image
# HOW: Copy package files and run npm ci for reproducible installs

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies
RUN npm ci --only=production

# Copy production dependencies aside
RUN cp -R node_modules /prod_node_modules

# Install all dependencies for building
RUN npm ci

# ═══════════════════════════════════════════════════════════════════
# ███ STAGE 2: Build ███
# ═══════════════════════════════════════════════════════════════════
FROM node:20-alpine AS build

WORKDIR /app

# Copy dependencies from previous stage
COPY --from=dependencies /app/node_modules ./node_modules

# Copy source code
COPY . .

# Build the application
RUN npm run build:<%= projectName %>

# ═══════════════════════════════════════════════════════════════════
# ███ STAGE 3: Production ███
# ═══════════════════════════════════════════════════════════════════
FROM node:20-alpine AS production

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create non-root user for security
RUN addgroup -g 1001 nodejs && \
    adduser -S -u 1001 -G nodejs nodejs

WORKDIR /app

# Copy production dependencies
COPY --from=dependencies --chown=nodejs:nodejs /prod_node_modules ./node_modules

# Copy built application
COPY --from=build --chown=nodejs:nodejs /app/dist ./dist

# Copy package.json for scripts
COPY --chown=nodejs:nodejs package*.json ./

# Switch to non-root user
USER nodejs

# Expose service port
EXPOSE <%= port %>

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:<%= port %>/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1))"

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/apps/<%= projectDirectory %>/main.js"]